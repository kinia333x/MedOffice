@using DayPilot.Web.Mvc;
@using DayPilot.Web.Mvc.Enums
@using DayPilot.Web.Mvc.Events.Scheduler;
@using DayPilot.Web.Mvc.Enums.Scheduler;

@{
    ViewBag.Title = "Harmonogram pracy";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .row1 {
        text-align: center
    }

    .row2 {
        text-align: center;
        height: 42px;
    }

    .row3 {
        text-align: center;
        height: 20px;
    }

    .row4 {
        text-align: center;
        height: 10px;
    }
</style>

<div>
    <div class="col-md-offset-0-5 col-md-4regt">
        <h2>@ViewBag.Title.</h2>
    </div>
    <br style="clear: both;">
    <div class="col-md-offset-0-5 col-md-4regst">
        <h4>Godziny pracy wszystkich pracowników.</h4>
    </div>
    <br style="clear: both;">
    <hr />

    @Html.DayPilotMenu("menu", new DayPilotMenuConfig
{
    CssClassPrefix = "menu_default",
    Items = new DayPilot.Web.Mvc.MenuItemCollection
{
new DayPilot.Web.Mvc.MenuItem { Text = "Usuń", Action = MenuItemAction.CallBack, Command = "Delete"},
new DayPilot.Web.Mvc.MenuItem { Text = "Edytuj", Action = MenuItemAction.JavaScript, JavaScript = "ask(e)"},
}
})


    @*<div style="float: left; width: 150px">
        @Html.DayPilotNavigator("dpn", new DayPilotNavigatorConfig
   {
       BackendUrl = Url.Content("~/Scheduler/NavigatorBackend"),
       BoundDayPilot = "dpsDaily",
       SelectMode = DayPilot.Web.Mvc.Enums.Navigator.NavigatorSelectMode.Day,
   })
    </div>*@

    @{ 
        int TypeOfScheduler;

        if (ViewBag.Type == "day")
        {
            TypeOfScheduler = 1;
        }
        else if (ViewBag.Type == "month")
        {
            TypeOfScheduler = 31;
        }
        else if (ViewBag.Type == "week")
        {
            TypeOfScheduler = 7;
        }
        else if (ViewBag.Type == "year")
        {
            TypeOfScheduler = 365;
        }
        else
        {
            TypeOfScheduler = 1;
        }
    }
    <div class="col-md-offset-2">
        @Html.DayPilotScheduler("dpsDaily", new DayPilotSchedulerConfig
   {
       BackendUrl = Url.Content("~/Scheduler/DailyBackend"),
       EventResizeHandling = EventResizeHandlingType.CallBack,
       EventMoveHandling = EventMoveHandlingType.CallBack,
       CellGroupBy = GroupBy.Day,
       CellDuration = 1440,
       Days = TypeOfScheduler,
       Scale = TimeScale.Hour,
       Width = "809.1px",
       StartDate = new DateTime(DateTime.Today.Year, DateTime.Today.Month, DateTime.Today.Day),
       BeforeRowHeaderRenderJavaScript = "row(args);",
       CellWidth = 40,
       EventHeight = 25,
       RowHeaderWidthAutoFit = false,
       RowHeaderHideIconEnabled = false,

            HeaderColumns = new RowHeaderColumnCollection {
new RowHeaderColumn("<center><a href='javascript:dpsDaily.commandCallBack(\"sort\", { field: \"name\" });'>Pesel</a></center>", 100),
new RowHeaderColumn("<center><a href='javascript:dpsDaily.commandCallBack(\"sort\", { field: \"fsname\" });'>Personalia</a></center>", 148)
},
            TimeHeaders = new TimeHeaderCollection {
//new TimeHeader(GroupBy.Month, "MMMM yyyy"),
//new TimeHeader(GroupBy.Week),
new TimeHeader(GroupBy.Day),
new TimeHeader(GroupBy.Hour)
},

            ShowNonBusiness = false,
            BusinessBeginsHour = 6,
            BusinessEndsHour = 20,

            EventClickHandling = EventClickHandlingType.JavaScript,
            EventClickJavaScript = "ask(e);",
            TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
            TimeRangeSelectedJavaScript = "create(start, end, resource)",
            ContextMenu = "menu",
        })
    </div>

    <br />
    <div class="col-md-offset-0-5">
        <p>
            @if (TypeOfScheduler == 1)
    {
        @Html.ActionLink("Kalendarz wizyt na najbliższy tydzień", "FullScheduler", "Scheduler", routeValues: new { viewType = "week" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy miesiąc", "FullScheduler", "Scheduler", routeValues: new { viewType = "month" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy rok", "FullScheduler", "Scheduler", routeValues: new { viewType = "year" }, htmlAttributes: new { id = "SchedulerShowLink" })<br />
}
else if (TypeOfScheduler == 7)
{
        @Html.ActionLink("Kalendarz wizyt na dzisiaj", "FullScheduler", "Scheduler", routeValues: new { viewType = "day" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy miesiąc", "FullScheduler", "Scheduler", routeValues: new { viewType = "month" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy rok", "FullScheduler", "Scheduler", routeValues: new { viewType = "year" }, htmlAttributes: new { id = "SchedulerShowLink" })<br />
}
else if (TypeOfScheduler == 31)
{
        @Html.ActionLink("Kalendarz wizyt na dzisiaj", "FullScheduler", "Scheduler", routeValues: new { viewType = "day" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy tydzień", "FullScheduler", "Scheduler", routeValues: new { viewType = "week" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy rok", "FullScheduler", "Scheduler", routeValues: new { viewType = "year" }, htmlAttributes: new { id = "SchedulerShowLink" })<br />
}
else if (TypeOfScheduler == 365)
{
        @Html.ActionLink("Kalendarz wizyt na dzisiaj", "FullScheduler", "Scheduler", routeValues: new { viewType = "day" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy tydzień", "FullScheduler", "Scheduler", routeValues: new { viewType = "week" }, htmlAttributes: new { id = "SchedulerShowLink" }) <br />
        @Html.ActionLink("Kalendarz wizyt na najbliższy miesiąc", "FullScheduler", "Scheduler", routeValues: new { viewType = "month" }, htmlAttributes: new { id = "SchedulerShowLink" })<br />
}

        @Html.ActionLink("Powrót na stronę główną", "Index", "Home")


        </p>
    </div>
</div>


<script type="text/javascript">
    function row(args) {
        args.row.cssClass = "row1";
    };
</script>

<script type="text/javascript">
function create(start, end, resource) {
	var m = new DayPilot.Modal();
	m.closed = function() {
        if (this.result == "OK") {
            dpsDaily.commandCallBack('refresh');
        }
        else { dpsDaily.commandCallBack('refresh'); }
        dpsDaily.clearSelection();
	};
	m.showUrl('/Event/Create?start=' + start + '&end=' + end + '&resource=' + resource);
}


/* Recurrence dialogs */

function ask(e) {

    // it's a normal event
    if (!e.recurrent()) {
        edit(e);
        return;
    }

    // it's a recurrent event but it's an exception from the series
    if (e.value() !== null) {
        edit(e);
        return;
    }

    var modal = new DayPilot.Modal();
    modal.width = 300;
    modal.height = 150;
    modal.closed = function () {
        if (this.result != "cancel") {
            edit(e, this.result);
        }
    };

    modal.showUrl('@Url.Action("RecurrentEditMode", "Event")');
}

function edit(e, mode) {
    var modal = new DayPilot.Modal();
    modal.closed = function () {
        if (this.result === "OK") {
            dpsDaily.commandCallBack('refresh');
        }
    };

    var url = "@Url.Action("Edit", "Event")";
    if (e.id() !== null) {
        url += "/" + e.id();
    }
    url += "?";
    if (e.recurrentMasterId()) {
        url += "master=" + e.recurrentMasterId() + "&";
    }
    if (mode == "this") {
        url += "start=" + e.start().toStringSortable();
    }
    modal.showUrl(url);
}
</script>

