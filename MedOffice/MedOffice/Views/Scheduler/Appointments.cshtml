@using DayPilot.Web.Mvc;
@using DayPilot.Web.Mvc.Enums
@using DayPilot.Web.Mvc.Events.Scheduler;

@{
    ViewBag.Title = "Kalendarz wizyt";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .row1 {
        text-align: center
    }

    .row2 {
        text-align: center;
        height: 42px;
    }

    .row3 {
        text-align: center;
        height: 20px;
    }

    .row4 {
        text-align: center;
        height: 10px;
    }
</style>

<div>
    <div class="col-md-offset-0-5 col-md-4regt">
        <h2>@ViewBag.Title.</h2>
    </div>
    <br style="clear: both;">
    <hr />

    @Html.DayPilotMenu("menu", new DayPilotMenuConfig
    {
        CssClassPrefix = "menu_default",
        Items = new DayPilot.Web.Mvc.MenuItemCollection
        {
            new DayPilot.Web.Mvc.MenuItem { Text = "Usuń", Action = MenuItemAction.CallBack, Command = "Delete"}
        }
    })

    @Html.DayPilotScheduler("dps", new DayPilotSchedulerConfig
    {
        BackendUrl = Url.Content("~/Scheduler/Backend"),
        EventResizeHandling = EventResizeHandlingType.CallBack,
        EventMoveHandling = EventMoveHandlingType.CallBack,
        CellGroupBy = GroupBy.Day,
        CellDuration = 1440,
        Days = 31,
        Scale = TimeScale.Hour,
        StartDate = DateTime.Today,
        BeforeRowHeaderRenderJavaScript = "row(args);",
        CellWidth = 40,
        EventHeight = 25,

        HeaderColumns = new RowHeaderColumnCollection {
            new RowHeaderColumn("<center></center>", 100),
            new RowHeaderColumn("<center></center>", 100),
            //new RowHeaderColumn("<center><a href='javascript:dps.commandCallBack(\"sort\", { field: \"fsname\" });'>Personalia</a></center>", 100)
        },
        TimeHeaders = new TimeHeaderCollection {
            //new TimeHeader(GroupBy.Month, "MMMM yyyy"),
            new TimeHeader(GroupBy.Week),
            new TimeHeader(GroupBy.Day),
            new TimeHeader(GroupBy.Hour)
        },

        ShowNonBusiness = false,
        BusinessBeginsHour = 6,
        BusinessEndsHour = 20,

        EventClickHandling = EventClickHandlingType.JavaScript,
        EventClickJavaScript = "ask(e);",
        TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
        TimeRangeSelectedJavaScript = "create(start, end, resource)",
        ContextMenu = "menu",
    })

    <div class="row4"></div>
</div>


<script type="text/javascript">
    function row(args) {
        args.row.cssClass = "row1";
    };
</script>

<script type="text/javascript">
@*function create(start, end, resource) {
	var m = new DayPilot.Modal();
	m.closed = function() {
        if (this.result == "OK") {
            dps.commandCallBack('refresh');
        }
        else { dps.commandCallBack('refresh'); }
        dps.clearSelection();
	};
	m.showUrl('/Event/Create?start=' + start + '&end=' + end + '&resource=' + resource);
}


/* Recurrence dialogs */

function ask(e) {

    // it's a normal event
    if (!e.recurrent()) {
        edit(e);
        return;
    }

    // it's a recurrent event but it's an exception from the series
    if (e.value() !== null) {
        edit(e);
        return;
    }

    var modal = new DayPilot.Modal();
    modal.width = 300;
    modal.height = 150;
    modal.closed = function () {
        if (this.result != "cancel") {
            edit(e, this.result);
        }
    };

    modal.showUrl('@Url.Action("RecurrentEditMode", "Event")');
}

function edit(e, mode) {
    var modal = new DayPilot.Modal();
    modal.closed = function () {
        if (this.result === "OK") {
            dps.commandCallBack('refresh');
        }
    };

    var url = "@Url.Action("Edit", "Event")";
    if (e.id() !== null) {
        url += "/" + e.id();
    }
    url += "?";
    if (e.recurrentMasterId()) {
        url += "master=" + e.recurrentMasterId() + "&";
    }
    if (mode == "this") {
        url += "start=" + e.start().toStringSortable();
    }
    modal.showUrl(url);
    }*@
</script>


