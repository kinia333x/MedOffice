@model MedOffice.Models.AppointmentViewModels.ServicesViewModel
@{
    ViewBag.Title = "Spis usług";
}
<div class="col-md-offset-0-5 col-md-4regt">
    <h2>Spis usług.</h2>
</div>
<br style="clear: both;">

<div class="form-group text-left">
    <br />
    <div class="form-group form-inline">
        @using (Html.BeginForm("Index", "Accountant"))
        {
            @Html.TextBox("searching", null, new { @class = "form-control", @placeholder = "Szukana usługa" })
            <input type="submit" name="SubmitButton" value="Szukaj" class="btn btn-default" />
        }
    </div>

    <label class="btn btn-primary active">
        <input type="checkbox" onclick="toggle(this)" /> Zaznacz/Odznacz Wszystkie
    </label>
</div>

<table class="table">

    <tr>
        <th>
            @Html.Label("Wybierz")
        </th>
        <th>
            @Html.ActionLink("Typ usługi", "Index", new { sortOrder = ViewBag.TypeSortParm })
        </th>
        <th>
            @Html.ActionLink("Nazwa usługi", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Data usługi", "Index", new { sortOrder = ViewBag.DataSortParm })
        </th>
        <th>
            @Html.ActionLink("Cena usługi", "Index", new { sortOrder = ViewBag.PriceSortParm })
        </th>
        <th>
            @Html.ActionLink("Koszty dodatkowe", "Index", new { sortOrder = ViewBag.AddPriceSortParm })
        </th>
        <th>
            @Html.ActionLink("Suma kosztów", "Index", new { sortOrder = ViewBag.TotalPriceSortParm })
        </th>
        <th>
        </th>
    </tr>

    @if (Model.AvailableServices.Count() == 0)
    {
        <tr>
            <td colspan="13" style="color:red">
                Brak wyników
            </td>
        </tr>
    }
    else
    {
        using (Html.BeginForm("Index", "Accountant"))
        {
            foreach (var item in Model.AvailableServices)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="SelectedServices" value="@item.Id" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ServiceType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ServiceName)
                    </td>
                    <th>
                        @Html.DisplayFor(modelItem => item.ServiceDate)
                    </th>
                    <td>
                        @Html.DisplayFor(modelItem => item.ServicePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SuppliesPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPrice)
                    </td>
                    @if (User.IsInRole("Administrator") || User.IsInRole("Księgowa"))
                    {
                        <td>
                            @Html.ActionLink("Edytuj", "Edit", new { id = item.Id })
                        </td>
                    }
                </tr>
            }
            <div class="form-group form-inline">
                <input type="submit" name="SubmitButton" class="btn btn-primary " value="Wygeneruj raport" />
                <input type="submit" name="SubmitButton" value="Wygeneruj pełny raport" class="btn btn-primary" />
            </div>
        }
    }
</table>

<script>
    function toggle(source) {
        var checkboxes = document.querySelectorAll('input[type="checkbox"]');
        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i] != source)
                checkboxes[i].checked = source.checked;
        }
    }
</script>